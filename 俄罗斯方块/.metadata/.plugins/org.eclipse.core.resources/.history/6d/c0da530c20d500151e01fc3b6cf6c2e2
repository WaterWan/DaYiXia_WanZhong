package water.eluosifangkuai.ui.cfg;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Image;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;

import water.eluosifangkuai.util.FrameUtil;

public class FrameConfig extends JFrame {

	private JButton btnOk = new JButton("确定");

	private JButton btnCancel = new JButton("取消");

	private JButton btnUser = new JButton("应用");

	private TextCtrl[] keyText = new TextCtrl[8];
	
	private final static Image IMG_PSP = new ImageIcon("data/psp.jpg").getImage();

	public FrameConfig() {
		// 设置布局管理器为“边界布局”
		this.setLayout(new BorderLayout());
		// 初始化按键输入框
		this.initKeyText();
		// 添加主面板
		this.add(createMainPanel(), BorderLayout.CENTER);
		// 添加按钮面板
		this.add(this.createButtonPanel(), BorderLayout.SOUTH);
		// 设置不能变大小
		this.setResizable(false);
		// 设置窗口大小
		this.setSize(880, 610);
		// 居中
		FrameUtil.setFrameCenter(this);

		// TODO ===p)测试用
		this.setDefaultCloseOperation(3);
		this.setVisible(true);
	}

	/**
	 * 初始化按键输入框
	 */
	private void initKeyText() {
//		(0, 135, 108, 20)
		int x = 0;
		int y = 135;
		int w = 108;
		int h = 20;
		for (int i = 0; i < 4; i++) {
			keyText[i] = new TextCtrl(x, y, w, h);
			y += 40;
		}
		x = 200;
		for (int i = 4; i < 8; i++) {
			keyText[i] = new TextCtrl(x, y, w, h);
			y += 40;
		}
		
	}

	/**
	 * 创建按钮面板
	 * 
	 * @return
	 */
	private JPanel createButtonPanel() {
		// 创建按钮面板，流式布局
		JPanel jp = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		jp.add(btnOk);
		jp.add(btnCancel);
		jp.add(btnUser);
		return jp;
	}

	/**
	 * 创建主面板(选项卡面板）
	 * 
	 * @return
	 */
	private JTabbedPane createMainPanel() {
		JTabbedPane jtp = new JTabbedPane();
		jtp.addTab("控制设置", this.createControlPanel());
		jtp.addTab("皮肤设置", new JLabel("皮肤"));
		return jtp;
	}

	/**
	 * 玩家控制设置面板
	 * 
	 * @return
	 */
	private JPanel createControlPanel() {
		JPanel jp = new JPanel() {	
			@Override
			public void paintComponent(Graphics g) {
				g.drawImage(IMG_PSP, 0, 0, null);
			}
		};
		// 设置布局管理器
		jp.setLayout(null);
		for (int i = 0; i < keyText.length; i++) {
			jp.add(keyText[i]);
		}
		
		return jp;
	}

	public static void main(String[] args) {
		new FrameConfig();
	}

}
